		TOPPERS/SafeG
		TOPPERS/FMPカーネルポーティングマニュアル

		対応バージョン: Release 1.2.2
		最終更新: 2015年09月17日

本ドキュメントはTOPPERS新世代カーネルとして，TOPPERSプロジェクトにおい
て開発中のTOPPERS/FMPカーネル(以下,FMPカーネル)をSafeGに対応させるため
に必要な事項について記述したものである．本ドキュメントはSafeGの基本的
なアーキテクチャについては理解した上で読むことを前提としている.


【FMPカーネルについて】
FMPカーネルはTOPPERS新世代カーネルとして，TOPPERSプロジェクトにおいて
開発中のマルチプロセッサ用のリアルタイムカーネルである．詳細については，
TOPPERS新世代カーネル仕様書を参照のこと．

FMPカーネルはARMアーキテクチャに対応しているため，SafeGを用いて同時実
行するOSとして使用することができる．


【ポーティングの流れ】
ポーティングは以下のような流れで行うことを推奨する.
 1. FMPカーネル,Linuxのみでポーティング対象のターゲットで動作することを確認する
 2. SafeGを用いて,シングルコアで2つのFMPカーネルを同時実行する
 3. SafeGを用いて,マルチコアで2つのFMPカーネルを同時実行する
 4. SafeGを用いて,シングルコアでLinuxとFMPカーネルを同時実行する
 5. SafeGを用いて,シングルコアでLinuxとFMPカーネルを同時実行する

実行するOSの状況を順に複雑化していくことで,バグを早期に見つけることができると考
えられる.OSの起動方法とデバッグ手法については debug.txtに記した.


【コア数指定方法】

(FMPカーネル)
マクロTNUM_PRCIDの値をMakefile中で定義することで指定することができる.
例えば2コアを使用したい場合は,TNUM_PRCID=2とする.Makefile中で定義しな
い場合については,ターゲットに依存したデフォルトの値が使用される.

(Linux)
マクロCONFIG_NR_CPUSでコア数を指定する. CONFIG_NR_CPUSは make 
menuconfigで設定するか, linux/.configファイルを直接編集する.なお
,CONFIG_NR_CPUSは,CONFIG_SMP=yの場合のみ指定できる.したがって,シングル
コアでLinuxを動作させる場合については,CONFIG_SMPを未定義にすればよい.

(SafeG)
monitor/target/[マルチコア向けターゲットディレクトリ]/Makefile.target
中のTNUM_PRCマクロでコア数を指定し,Makefile.configで,MONITOR_TARGETを
そのターゲットに設定する.


【OSの修正に関する注意】
FMPカーネルを修正する前に,ターゲットでのFMPカーネル単体での動作を確認
する.修正が必要なのは主にターゲット依存・アーキテクチャ依存部分のコー
ドに限られる.これらのコードが含まれるディレクトリ名は target/, 
arch/arm_gcc/である.

FMPカーネルはLinuxと同時実行する際には,セキュア状態で実行されることに
なるため, TrustZoneに関する初期化コードを格納する必要がある.TrustZone
に関連したコードの多くが割り込み,デバイスアクセスのセキュリティ設定に
関するものである. Linuxを始めとする汎用OSの多くはRTOSに比べ,ソースコー
ドが複雑であるため,修正は最小限とするべきである.したがって,FMPカーネル
側でLinuxの使用しないデバイスを利用するように工夫した方が実装が簡単な
場合が多い.

FMPカーネルとFMPカーネルを同時実行する場合については一方のFMPカーネル
をセキュア状態で,もう一方のFMPカーネルをノンセキュア状態で実行する.ノ
ンセキュア状態のFMPカーネルはセキュア状態で実行されるFMPカーネルのうち
,TrustZoneの初期化コードを取り除き,同じターゲットでタイマやシリアルポ
ートなどのデバイスをセキュア側で使用しないものに変更するだけでよい.こ
のため,アーキテクチャ依存部分のコードのみの変更で対応可能であると考え
られる.



【チェックリスト(FMPカーネル)】

以下,FMPカーネルをSafeGで動作させるために必要な項目について,具体的な設
定項目について記述する.多くの設定がTrustZoneに関連するセキュリティの設
定とOS間で重複するデバイスの除去である.

(アーキテクチャ依存部分に記述すべき項目)
FMPカーネル 1.2.2以降では，SafeGに対応したコードが既に組み込まれている
．有効にするには，TOPPERS_SAFEG_SECURE を定義してコンパイルすればよい．

以下,アーキテクチャ依存部分で行うべき処理を示す.

<セキュア割り込み優先度>
FMPカーネルの使用する割り込み番号の割り込み優先度はすべてのLinuxの割り
込み優先度より高く設定する必要がある.具体的には,FMPカーネル内部の優先
度表現で-16以下の値に設定する必要がある.

<Linuxにおけるプライベート割込み(SGI, PPI)の優先度設定>

SGI, PPIは各コアごとのプライベートな割込みであり，それらの割込み優先度
はコアごとに個別に設定することが可能である．TrustZoneを利用する場合，
Secure、Non-secure状態のそれぞれの全てのコアで割込み優先度を設定する必
要がある．

しかし，元々Secure側での動作を前提としたLinuxカーネルではデフォルトで
マスタコア以外の割込み優先度を設定していない．このため，FMPカーネル側
でLinuxの使用するプライベート割込みの優先度を設定する必要がある．

具体的には，GICの割込み優先度レジスタ(Interrupt Priority Register)から
設定を行う．全ての割込み優先度レジスタの値を「0xd0d0d0d0」とする．
Linuxでは「0xa0a0a0a0」の値となることを期待した実装となっているが，
Non-secure側から見た割込み優先度はSecure側から見た割込み優先度を1ビッ
トシフトして，上位ビットが1となったように見えるため，この値とする必要
がある．実装例：fmp/arch/arm_gcc/mpcore/mpcore.cのdic_init_sgi_ppi()関
数

<セキュア割り込みのマスク>
FMPカーネルではCPUロック状態で通常IRQをマスクしているが,セキュア状態で
実行するFMPでは, IRQに加えてFIQもマスクするようにする(割り込み禁止状態
でIRQビットとFIQビットをいつもセットするようにすればよい).

<GIC>
GICはARMの割り込みコントローラである
(ARMv7-A以降.ARM11ではTZICが使用されていた).

通常の割り込みの設定に加え,TrustZoneに関連する割り込みのセキュリティの
設定もGICで行う.割り込みセキュリティは各割り込み番号ごとに設定され,そ
の割り込み番号がセキュア・ノンセキュアであるかを指定する.チェックすべ
き項目を以下に示す.

・セキュア割り込みがFIQで入力されるように設定する(CPU interface control register)
・FMPカーネルの使用する割り込みをセキュア割り込みとする(割り込みセキュリティレジスタ)
・Linux・u-bootの使用する割り込みをノンセキュアとする(割り込みセキュリティレジスタ)

ARMの割り込みにはSGI(0~15), PPI(16~31), SPI(32~)があり,SGIとPPIについ
ては,コアごとに個別に初期化を行う必要がある.

FMPカーネルが使用する割り込みの数はLinuxより少ないため,すべての割り込
みをノンセキュアとして設定し,FMPカーネルの使用する割り込みをセキュアと
して設定し直す方が容易である.

<SCU>
Cortex-A9 MPCoreのSCUでは,Cortex-A9 Private Timer，Watchdog Timer, 
Global Timerに関するセキュリティを設定可能である.ノンセキュア状態のプ
ロセッサからPrivate Timerにアクセスする場合はノンセキュアアクセスコン
トロールレジスタにて,全プロセッサからPrivate Timerへのアクセス許可を行
う必要がある.


(ターゲット依存部分に記述すべき項目)
以下,ターゲット依存部分で行うべき処理を示す.

<割り込みベクタテーブル>
TrustZoneを有効にすると,SafeG,RTOS,汎用OSで個別にベクタテーブルを設定
する必要がある.モニタベクタはSafeGによって設定されている.セキュア状態
で使用するベクタテーブルは個別に設定する必要がある.自身の割り込みベク
タテーブルはベクタテーブルベースレジスタにアドレスを指定することで設定
可能である.

<デバイスドライバの分離>
シリアルポート,タイマ等のドライバを変更し,Linuxと共存できるようにする.

<シリアルポート>
シリアルポートを使用する場合には,FMPカーネルが使用するポートと
Linux,u-bootの使用するポートが重複しないようにする.またFMPカーネルでは
コアごとの出力を別々のポートで行うように設定することが可能であるが,ポ
ート数の関係上,全てのコアの出力をひとつのポートで行うように設定すべき
である.この設定を行うためは「G_SYSLOG」マクロを定義する.

<タイマ>
Cortex-A9の場合は,Private Timerに加えて，Watchdog Timer と Global 
TimerをOSのタイマとして設定することができる．Private TimerとWatchdog 
Timerは，同じSecurity設定に出来ない．Linuxは，Private Timerを使用する
ため，FMPでは，グローバルタイマを使用することを推奨する．

<コア間割り込み>
コア間割り込みは,SGIによって実装されている.Linuxは起動時やプロセス間通
信でコア間割り込みを使用しているため,FMPカーネルで使用するコア間割り込
み(主にディスパッチ要求用)の番号がLinuxと重複しないようにする.また,割
り込みセキュリティについても設定する.

<ベースアドレス>
FMPカーネル,u-boot,Linuxの配置先アドレスが重複しないように調整する.タ
ーゲットボードにSRAMが搭載されていれば,SafeG,FMPカーネルをSRAMに配置す
ることでu-bootとLinuxのベースアドレスを変更しなくてよいと考えられる.

<TZPC>
TZPCはノンセキュア状態のプロセッサのデバイスへのアクセス権限を設定する
.FMPカーネルの使用するデバイスへのノンセキュア側からのアクセスを禁止す
るように設定する.

<TZASC>
TZASCはDRAMの領域のセキュア・ノンセキュア属性を設定する.なお,SRAM領域
に関してはTZPCで設定する.SafeGやFMPカーネルをDRAMに配置する場合は
,TZASCで配置された領域をセキュアに設定する.



【チェックリスト(u-boot)】

<フラッシュからu-boot自身のコピーを行うコードの除去>
特定のターゲットボード向けのu-bootでは,フラッシュメモリから自身を起動
させるためにDRAM領域へu-boot自身をコピーして,コピー先へジャンプするた
めの命令を含んでいる.SafeGでu-bootを起動する場合では,直接DRAMに配置さ
れたu-bootのエントリポイントにジャンプするため,このコードを除去する必
要がある.

<ベースアドレス>
SafeG,FMP,u-boot,Linuxの配置先アドレスが重複しないように調整する.



【チェックリスト(Linux)】

<使用するメモリ領域の指定>
FMPカーネルとLinuxと同じDRAM領域に配置する場合,LinuxがFMPカーネルの領
域にアクセスしないように設定する.Linuxはカーネルパラメータより使用する
物理メモリの領域を指定できる.例えば,以下のパラメータをカーネルパラメー
タに追加することで,Linuxは0x60008000番地から0x70000000番地までを使用す
るようになる.

    memmap=0x60008000$0x70000000

<L2キャッシュコントローラ(PL310)>
TrustZoneに対応したL2キャッシュコントローラPL310のデバイスレジスタのう
ちコントロールレジスタはセキュア状態のプロセッサからしかアクセスできな
い.このため,LinuxでL2キャッシュをオンにするコードを実行することはでき
ないため,make menuconfig等でL2キャッシュを使用しないようにする.


【質問・要望など】
TOPPERS/SafeGをはじめ,TOPPERSプロジェクトに関する質問は,TOPPERSユーザ
ズメーリングリストから行うことができる.

詳細は以下を参照.
http://www.toppers.jp/contacts.html


【参考文献・マニュアル】
[1] AMBA3 TrustZone Protection Controller (BP147) Technical Overview,
DTO 0015A, ARM Ltd., 2004
[2] PrimeCell Generic Interrupt Controller (PL390) Technical Reference Manual,
ARM DDI 04168B (ID012510)
[3] ARM Generic Interrupt Controller Architecture Specification,
ARM IHI 0048A
[4] ARM Architecture Reference Manual ARMv7-A and ARMv7-R edition Errata markup,
ARM DDI 0406B_errata_2009_Q3 (ID100209)
[5] Cortex-A9 Technical Reference Manual,
ARM DDI 0388F (ID050110)
[6] Cortex-A9 MPCore Technical Reference Manual,
ARM DDI 0407F (ID050110)
[7] PL310 Cache Controller Technical Reference Manual,
ARM DDI 0246A
[8] CoreLink TrustZone Address Space Controller TZC-380 Technical Reference Manual,
ARM DDI 0431C (ID090910)
[9] TOPPERS新世代カーネル統合仕様書 Release 1.4.0
[10] TOPPERS/SafeG : http://www.toppers.jp/safeg.html
